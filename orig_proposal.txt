The user is presented with a chat or twitter-like website at http://<server>/chat/ that has one other user named .admin. or something fancy-sounding.  The admin has access to the flag at http://<server>/resources/flag/ and the user must leverage an XSS flaw in the chat page to steal admin.s session cookie.  However, the cookie is only valid for /chat/ and must be modified to work for /resources/flag/ its value must be Base64 decoded.  The user will then see that there is a session token and a 3-digit nonce.  The session token will work on both URLs, but the nonce for /resources/flag/ must be brute forced. Thus, the user must concatenate the session token with each nonce guess, base64 encode it, add it to their cookie store, and try to get to the flag URL.  This clearly must be scripted.  If extra difficulty needs to be added, realism can be sacrificed by putting URL history into html local storage.  The user.s store won.t have the flag URL, so they must XSS the admin to see their history, which will include the flag URL.
